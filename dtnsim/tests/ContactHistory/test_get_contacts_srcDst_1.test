%description:
Test the functionality of getting all available contacts within a ContactHistory for a given Source/destination pair.

%includes:
#include <src/node/dtn/ContactPlan.h>
#include <src/node/dtn/Contact.h>
#include <src/node/dtn/ContactHistory.h>

%activity:
#define CHECK(cond)  if (!(cond)) {throw cRuntimeError("BUG at line %d, failed condition %s", __LINE__, #cond);}

Contact testC = Contact(0, 50, 100, 1, 3, 100, 1.0, 10);
Contact testC2 = Contact(1, 100, 150, 1, 3, 100, 1.0, 10);
Contact testC3 = Contact(2, 50, 100, 2, 3, 100, 1.0, 100);
Contact testC4 = Contact(3, 50, 100, 5, 3, 100, 1.0, 100);
Contact testC5 = Contact(4, 50, 100, 4, 3, 100, 1.0, 100);
Contact testC6 = Contact(5, 20, 30, 1, 3, 100, 1.0, 10);
Contact testC7 = Contact(6, 50, 100, 1, 5, 100, 1.0, 10);
Contact testC8 = Contact(7, 50, 100, 1, 4, 100, 1.0, 10);
Contact testC9 = Contact(8, 160, 180, 1, 3, 100, 1.0, 10);
Contact testC10 = Contact(9, 155, 160, 1, 3, 100, 1.0, 10);
Contact testC11 = Contact(10, 50, 100, 1, 2, 100, 1.0, 10);
Contact testC12 = Contact(11, 50, 100, 0, 2, 100, 1.0, 10);
Contact testC13 = Contact(12, 50, 100, 6, 2, 100, 1.0, 10);
Contact testC14 = Contact(13, 50, 100, 7, 2, 100, 1.0, 10);
ContactHistory testHistory = ContactHistory();

testHistory.addContact(&testC, &testC);
testHistory.addContact(&testC, &testC);
testHistory.addContact(&testC2, &testC2);
testHistory.addContact(&testC3, &testC3);
testHistory.addContact(&testC4, &testC4);
testHistory.addContact(&testC5, &testC5);
testHistory.addContact(&testC6, &testC6);
testHistory.addContact(&testC7, &testC7);
testHistory.addContact(&testC8, &testC8);
testHistory.addContact(&testC9, &testC9);
testHistory.addContact(&testC10, &testC10);
testHistory.addContact(&testC11, &testC11);
testHistory.addContact(&testC12, &testC12);
testHistory.addContact(NULL, &testC13);
testHistory.addContact(&testC14, NULL);

vector<Contact*> contacts = testHistory.getAllContactsForSourceDestination(1, 3);

CHECK(contacts.size() == 5);
CHECK((*contacts.at(0)).getId() == 5)
CHECK((*contacts.at(1)).getId() == 0)
CHECK((*contacts.at(2)).getId() == 1)
CHECK((*contacts.at(3)).getId() == 9)
CHECK((*contacts.at(4)).getId() == 8)

contacts = testHistory.getAllContactsForSourceDestination(0, 2);

CHECK((*contacts.at(0)).getId() == 11)

contacts = testHistory.getAllContactsForSourceDestination(1, 4);

CHECK((*contacts.at(0)).getId() == 7)

contacts = testHistory.getAllContactsForSourceDestination(1, 5);

CHECK((*contacts.at(0)).getId() == 6)

contacts = testHistory.getAllContactsForSourceDestination(2, 3);

CHECK((*contacts.at(0)).getId() == 2)

contacts = testHistory.getAllContactsForSourceDestination(4, 3);

CHECK((*contacts.at(0)).getId() == 4)

contacts = testHistory.getAllContactsForSourceDestination(5, 3);

CHECK((*contacts.at(0)).getId() == 3)

contacts = testHistory.getAllContactsForSourceDestination(6, 2);

CHECK((*contacts.at(0)).getId() == 12)

contacts = testHistory.getAllContactsForSourceDestination(7, 2);

CHECK((*contacts.at(0)).getId() == 13)

contacts = testHistory.getAllContactsForSourceDestination(5, 4);

CHECK(contacts.size() == 0);



