[General]
network = src.dtnsim
repeat = 1

# Simulation end time
sim-time-limit = 120s

# Nodes quantity (identifiers (EiDs) matches their index, EiD=0 is ignored)			
dtnsim.nodesNumber = 10
dtnsim.node[1..3].icon = "satellite"

# Nodes's failure rates
dtnsim.node[*].fault.enable = false
dtnsim.node[*].fault.faultSeed = ${repetition}*10
dtnsim.node[*].fault.meanTTF = 20s
dtnsim.node[*].fault.meanTTR = 5s

# dtn Layer (available routing: direct, cgrModel350, cgrIon350, cgrModelRev17)
#dtnsim.node[*].dtn.routing = "cgrModel350"
dtnsim.node[*].dtn.routing = "uniboCgr"
dtnsim.node[*].dtn.routingType = "routeListType:allPaths-initial+anchor,volumeAware:allContacts,extensionBlock:on,contactPlan:local"
dtnsim.node[*].dtn.printRoutingDebug = true
dtnsim.central.contactsFile = "contactPlan/contactPlan.txt"

# Logger outputs
dtnsim.node[*].dtn.saveBundleMap = true
dtnsim.central.saveTopology = true
dtnsim.central.saveFlows = true

# App Layer (comma separeted strings for different traffic generators)			
dtnsim.node[1].app.enable=true
dtnsim.node[1].app.returnToSender=false			
dtnsim.node[1].app.bundlesNumber="1,1,1,1,1,1,1"
dtnsim.node[1].app.start="10, 21, 32, 71, 76, 78, 92"				 
dtnsim.node[1].app.destinationEid="2,2,2,2,2,2,2"
dtnsim.node[1].app.size="1000,1000,1000,1000,1000,1000,1000"

dtnsim.node[4].app.enable=true
dtnsim.node[4].app.returnToSender=false			
dtnsim.node[4].app.bundlesNumber="1"
dtnsim.node[4].app.start="50"				 
dtnsim.node[4].app.destinationEid="2"
dtnsim.node[4].app.size="1000"


