[General]
network = src.dtnsim
repeat = 5

# Simulation end time
sim-time-limit = 200s

# Nodes quantity (identifiers (EiDs) matches their index, EiD=0 is ignored)			
dtnsim.nodesNumber = 15	
dtnsim.node[1..3].icon = "satellite"

# Nodes's failure rates
dtnsim.node[*].fault.enable = false
dtnsim.node[*].fault.faultSeed = ${repetition}*10
dtnsim.node[*].fault.meanTTF = 20s
dtnsim.node[*].fault.meanTTR = 5s

# dtn Layer (available routing: direct, cgrModel350, cgrIon350, cgrModelRev17)
#dtnsim.node[*].dtn.routing = "cgrModel350"
dtnsim.node[*].dtn.routing = "uncertainUniboCgr"
dtnsim.node[*].dtn.routingType = "routeListType:allPaths-initial+anchor,volumeAware:allContacts,extensionBlock:on,contactPlan:local"
dtnsim.node[*].dtn.printRoutingDebug = true
dtnsim.central.contactsFile = "contactPlan/contactPlan.txt"
dtnsim.central.useSpecificFailureProbabilities = true
dtnsim.central.failureProbability = -1
dtnsim.central.mode = 0
dtnsim.central.useUncertainty = false
seed-set = ${repetition}

# Logger outputs
dtnsim.node[*].dtn.saveBundleMap = true
dtnsim.central.saveTopology = true
dtnsim.central.saveFlows = true

# App Layer (comma separeted strings for different traffic generators)			
dtnsim.node[1].app.enable=true
dtnsim.node[1].app.returnToSender=false			
dtnsim.node[1].app.bundlesNumber="1"
dtnsim.node[1].app.start="5"				 
dtnsim.node[1].app.destinationEid="5"
dtnsim.node[1].app.size="0"






